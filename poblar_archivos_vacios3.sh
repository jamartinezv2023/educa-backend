#!/bin/bash

# Funci√≥n para poblar archivo si est√° vac√≠o
poblar_si_vacio() {
  archivo="$1"
  tipo="$2"

  if [ ! -s "$archivo" ]; then
    echo "üìÑ Poblando archivo vac√≠o: $archivo"

    case "$tipo" in
      controller)
        cat > "$archivo" <<EOF
package $(echo "$archivo" | sed -E 's|.*/java/||; s|/|.|g; s|\.java$||');

import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api")
public class $(basename "$archivo" .java) {

}
EOF
        ;;
      service_interface)
        cat > "$archivo" <<EOF
package $(echo "$archivo" | sed -E 's|.*/java/||; s|/|.|g; s|\.java$||');

public interface $(basename "$archivo" .java) {

}
EOF
        ;;
      service_impl)
        cat > "$archivo" <<EOF
package $(echo "$archivo" | sed -E 's|.*/java/||; s|/|.|g; s|\.java$||');

import org.springframework.stereotype.Service;

@Service
public class $(basename "$archivo" .java) {

}
EOF
        ;;
      dto)
        cat > "$archivo" <<EOF
package $(echo "$archivo" | sed -E 's|.*/java/||; s|/|.|g; s|\.java$||');

public class $(basename "$archivo" .java) {

}
EOF
        ;;
      util)
        cat > "$archivo" <<EOF
package $(echo "$archivo" | sed -E 's|.*/java/||; s|/|.|g; s|\.java$||');

public class $(basename "$archivo" .java) {

}
EOF
        ;;
      readme)
        cat > "$archivo" <<EOF
# üìö Educa Backend

Backend del sistema educativo **Educa**, desarrollado en Java con Spring Boot, siguiendo principios SOLID, arquitectura por capas y convenciones de c√≥digo limpio. Este servicio expone APIs RESTful seguras para gestionar usuarios, estudiantes, autenticaci√≥n y evaluaciones psicol√≥gicas.

---

## üöÄ Tecnolog√≠as utilizadas

- ‚òï Java 17
- üß™ JUnit 5
- üå± Spring Boot 3
- üîê Spring Security + JWT
- üîÑ Maven
- üß∞ Lombok
- üåê Swagger (OpenAPI)
- üêò PostgreSQL / H2 (dev)
- üê≥ Docker

---

## üìÅ Estructura del proyecto

\`\`\`
com.educa.backend
‚îú‚îÄ‚îÄ config               # Configuraciones globales (seguridad, swagger, etc.)
‚îú‚îÄ‚îÄ domain              
‚îÇ   ‚îú‚îÄ‚îÄ model           # Entidades del dominio
‚îÇ   ‚îî‚îÄ‚îÄ repository      # Interfaces de persistencia
‚îú‚îÄ‚îÄ dto                 # DTOs y Mappers
‚îú‚îÄ‚îÄ exception           # Manejador global de excepciones
‚îú‚îÄ‚îÄ security            # Filtros y utilidades JWT
‚îú‚îÄ‚îÄ service             
‚îÇ   ‚îú‚îÄ‚îÄ interfaces      # Interfaces de los servicios
‚îÇ   ‚îî‚îÄ‚îÄ impl            # Implementaciones de servicios
‚îú‚îÄ‚îÄ util                # Constantes y clases utilitarias
‚îî‚îÄ‚îÄ web                 # Controladores REST (divididos por dominio)
\`\`\`

---

## üõ†Ô∏è Requisitos

- Java 17+
- Maven 3.6+
- Docker (opcional)
- IDE recomendado: IntelliJ IDEA

---

## üß™ C√≥mo ejecutar localmente

\`\`\`bash
# Clona el proyecto
git clone https://github.com/tuusuario/educa-backend.git
cd educa-backend

# Compila y ejecuta el proyecto
./mvnw spring-boot:run

# O usa Docker (requiere docker-compose)
docker-compose up
\`\`\`

Accede a Swagger en: [http://localhost:8080/swagger-ui/index.html](http://localhost:8080/swagger-ui/index.html)

---

## üß™ Ejecutar tests

\`\`\`bash
./mvnw test
\`\`\`

---

## üìÑ Documentaci√≥n

- Autenticaci√≥n JWT
- CRUD de usuarios y estudiantes
- Evaluaciones Kolb, Kuder y Felder-Silverman
- Clasificaci√≥n autom√°tica por estilos

(Agrega detalles o enlaces cuando est√©n disponibles)

---

## üë©‚Äçüíª Autor√≠a

> Proyecto desarrollado por el equipo Educa 2024  
> [Valeria M√©ndez Escobar](mailto:valeria.mendez@colegio.edu.co) - Grado 11-2

---

## üìú Licencia

Este proyecto est√° bajo la licencia MIT. Consulta el archivo [LICENSE](LICENSE) para m√°s informaci√≥n.
EOF
        ;;
      *)
        echo "‚ùì Tipo no reconocido para $archivo"
        ;;
    esac
  fi
}

# Llamadas a archivos detectados como vac√≠os
poblar_si_vacio "./src/main/java/com/educa/backend/service/interfaces/student/IStudentService.java" service_interface
poblar_si_vacio "./src/test/java/com/educa/backend/service/impl/user/UserServiceTest.java" service_impl
poblar_si_vacio "./README.md" readme

# Dar permisos de ejecuci√≥n al propio script
chmod +x "$0"

echo "‚úÖ Script finalizado. Archivos vac√≠os poblados (si hab√≠a)."
